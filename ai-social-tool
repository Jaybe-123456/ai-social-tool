AI Social Content Generator

A Next.js-based AI-powered content generation tool that integrates with multiple social media platforms. This app uses GPT-4 for generating engaging social content and allows scheduling or direct posting via social APIs.




Features

AI-powered content generation using GPT-4

Social media API integrations (Facebook, Instagram, Twitter, LinkedIn)

Scheduling and direct post capabilities

Clean, responsive UI with Tailwind CSS

Framer Motion animations




Tech Stack

Next.js (React framework)

Tailwind CSS (styling)

Framer Motion (animations)

OpenAI API (GPT-4) (AI content generation)

Social Media APIs (for post scheduling and publishing)

Supabase/PostgreSQL (backend + storage, optional)




Project Structure

/ai-social-tool
├── /components
│   └── ui
│       ├── button.js
│       ├── textarea.js
│       └── card.js
├── /pages
│   ├── api
│   │   └── generate.js
│   └── index.js
├── /public
├── /styles
├── /utils
├── tailwind.config.js
├── next.config.js
├── package.json
└── README.md




Example API Route (/pages/api/generate.js)

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const { prompt } = req.body;

  const response = await fetch('https://api.openai.com/v1/chat/completions', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
    },
    body: JSON.stringify({
      model: 'gpt-4',
      messages: [{ role: 'user', content: prompt }],
    }),
  });

  const data = await response.json();

  res.status(200).json({ content: data.choices[0].message.content });
}



Getting Started

1. Clone the repo:

git clone https://github.com/yourusername/ai-social-tool.git
cd ai-social-tool


2. Install dependencies:

npm install


3. Create a .env.local file and add your OpenAI API key:

OPENAI_API_KEY=your_openai_api_key_here


4. Run the development server:

npm run dev


5. Access the app at http://localhost:3000





Deployment

Deploy easily on Vercel (Next.js default host) or Netlify.




License

MIT License.


---

Now you can push this whole project to GitHub under your preferred username/repository name. Need help setting up the repository and first commit too?

